<!-- Do not delete this file it is the website entry point -->

# Single Sign On (SSO)

> Making Entra ID THE identity platform to authenticate staff services.

There is significant interest in using Entra ID as authentication point for digital services within the MoJ estate. Ad-hoc requests have been looked at but there is currently no defined standard patterns and processes for what makes this a thing.

This document aims to give guidance to digital teams on how to onboard and integrate with Entra ID.

# Benefits for using SSO Centralized Identity Management

Entra ID centralises user identity management, allowing administrators to manage user identities, access privileges, and authentication methods from a single platform. This simplifies administration and reduces the risk of errors or inconsistencies in access control.

## Entra ID

* **Single Sign-On (SSO)**: Entra ID supports single sign-on, enabling users to access multiple applications and services with a single set of credentials. This improves user experience by reducing the need to remember and enter multiple passwords.
* **Multi-Factor Authentication (MFA)**: Entra ID supports multi-factor authentication, adding an extra layer of security beyond passwords. By requiring users to verify their identity through multiple factors such as passwords, biometrics, or OTPs, Entra ID helps prevent unauthorized access even if passwords are compromised.
* **Role-Based Access Control (RBAC)**: Entra ID allows administrators to define access policies based on users' roles and responsibilities within the organization. This granular access control ensures that users have the appropriate level of access to resources based on their job functions, reducing the risk of data breaches or unauthorized actions.
* **Scalability and Flexibility**: Entra ID is designed to scale with the organization's needs, accommodating growth and changes in user populations and IT infrastructure. It supports various authentication methods and can integrate with existing systems and applications, providing flexibility in deployment.
* **Auditing and Compliance**: Entra ID offers auditing capabilities that track user authentication and access activities, providing visibility into who accessed what resources and when. This helps organizations meet compliance requirements and enables timely detection and response to security incidents.
* **Enhanced Security**: By enforcing strong authentication measures and access controls, Entra ID enhances security posture and helps protect sensitive data and resources from unauthorized access or misuse.
* **User Self-Service**: Entra ID may offer self-service capabilities that allow users to manage their own identities, reset passwords, and update profile information without administrative intervention, improving efficiency and user satisfaction.

## End-user benefits

* Less username and password management
* Self-service password reset (reducing support calls)
* Encourages better user security practices
* Consistent authentication journey across services

## Business benefits

* Reduced complexity for development teams
* Reduced administration and support for service teams
* Centralised and controlled security practices
* Automated JML process
* Reduced costs from applications, infrastructure and user management

## Single Sign-On capabilities

* One way to login in across all your services
* Standards based software application integration (OIDC, SAML)
* Conditional Access
* Ready for future advances in passwordless authentication (Biometrics, hardware authenticators, etc)

## Security, Identity Analytics and Threat Detection

* Machine Learning and AI adaptive authentication policies and security controls
* Verifiable Credentials ready for cross government authentication
* Behavioural analytics to detect unusual behaviour and challenge appropriately
* Identity Access Management and principle of least privilege by default
* Reduced attack vectors for cyber attacks

# Authentication vs Authorisation

## Authentication

Authentication is the process of proving that you're who you say you are. This is achieved by verification of the identity of a person or device.

## Authorisation

Authorization is the act of granting an authenticated party permission to do something. It specifies what data you're allowed to access and what you can do with that data.

The EUC Identity Team will be responsible for handling your Authentication. Digital Service teams will be responsible for Authorisation within their application.

# Onboarding Process

We will setup three App Registrations across our DEVL, NLEV and PROD environments for your use. You will be provided with your authentication details for each environment to store securely.

Where possible you should use Mocks that can provide fast feedback on your testing, however for integration and acceptance testing, NLEV and DEVL will be available for you.

## Responsibility Matrix

| Role  | EUC Identity Team | Digital Service | Notes |
| ----- | -------- | -------- | -------- |
| Authentication | Yes | No | |
| Authorisation (Roles/Role Management) | No | Yes | |
| Key Rotation | Yes | Yes | |
| Permissions | Yes | Yes | |
| App Registration | Yes | Yes | |
| Joiners, Movers, Leavers | Yes | Yes | MoJ Business and the EUC Identity team will handle any JML processes from the user's side, however any linked data within your service will be the services responsibility. |

## Requesting an SSO Integration

To raise an SSO request you should use the `Create a Demand Request` Catalogue item on ServiceNow.

[Create a Demand Request Link](https://mojprod.service-now.com/moj_sp?id=sc_cat_item&sys_id=fb2dcd591b2c9d503393a797b04bcb88)

Once we recieve your request we will contact you and send a questionaire which will be required to be filled in to help us better understand your need and progress your SSO Application.

We will setup and send details for our DEVL, NLE and PROD environments so you are able to test your integrations before going live.

#### What you will recieve after setup

##### SAML Request

If you have chosen a SAML integration you will recieve

* An XML metadata file to be used by the service team. This will be shared via OneDrive.
* Details on using our Entra development environment during your implementation.

##### OIDC Request

If you have chosen a OIDC integration you will recieve

* The App Registration connection details and client/secret or certificate to be used for authenticating your application.
* Details for the DEV, NLEV and PROD App Registration.

### Permissions

#### Email & Username

This standard permission allows your application sign in and to request the users email address and name on Authentication.
Other

Should you wish for more permissions, such as asking for groups the user belongs too or write permissions to the profile, you will need to complete a DPIA and consult with the EUC Identity team.

### Unique Identifier

Email addresses, phone numbers or company unique identifiers can change over time. In your service you should ensure you are using a unique key provided by Entra to prevent any data sync issues over time.

To do this, we suggest using the OIDC standard oid claim which identifies that user in Entra. This will never change unlike the users email address. Within the OIDC claim you will have access to the users email address, you can use this information, should you wish, to update any stored email address in your service if it differs.
For more information regarding best practices for identifying a user, see the Microsoft documentation here: [https://learn.microsoft.com/en-us/entra/identity-platform/id-token-claims-reference#use-claims-to-reliably-identify-a-user](https://learn.microsoft.com/en-us/entra/identity-platform/id-token-claims-reference#use-claims-to-reliably-identify-a-user)

# Implementation Strategies

Outlined below are a set of options that are available for your Digital Service to authenticate with Entra.

## OIDC Certificates (Preferred)

The most secure way for authenticating your application is using Certificates. This requires the generation of a X.509 certificate with a private key that is used by the interacting service(s) to allow secure OIDC authentication.

As Certificates are more secure than client secrets, there is a reduced need to rotate the Certificates at the same rate. We would recommend regenerating your Certificates once a year.
When it comes to security, certificate and client assertion is more secure than client secrets. There are two main reasons:

* Client secrets are transmitted through the wire within the token request. Once communication is intercepted by an attacker, the client secret can be easily extracted, and re-used by the attacker to obtain access tokens or until the client secret expires. Certificates are never exposed in communication.
* Client assertion signed using certificate is short-lived, its expiration time can be defined in the client assertion payload. In contrast a client secret can be valid up to 2 years. Even if the client assertion is intercepted, short expiration times limits the risk of its re-usage.

Microsoft also recommends using certificates over client secrets.

> We strongly recommend that you use x509 certificates issued by Trusted Certificate Authority as the only credential type for getting tokens for your application.
Source: [https://devblogs.microsoft.com/microsoft365dev/client-secret-expiration-now-limited-to-a-maximum-of-two-years/](https://devblogs.microsoft.com/microsoft365dev/client-secret-expiration-now-limited-to-a-maximum-of-two-years/)

#### References

* [https://learn.microsoft.com/en-us/entra/identity-platform/certificate-credentials](https://learn.microsoft.com/en-us/entra/identity-platform/certificate-credentials)

### Option 1 - Authenticate users using an Application Load Balancer

For AWS and Cloud Platform, certificates or client secrets can be read via Managed Identity access or AWS Certificate Manager and applied to the AWS Application Load Balancers. AWS will then use these credentials to authenticate, removing the need for client secrets or certificates to be stored in containers or application code.

Secrets and Certificates will no longer need to be accessed by applications so no more repeating the same authentication code in all your code bases.

X.509 Certificates can be requested by the IDAM team and are managed from the MoJ PKI Service. When created we will send you the relevant documentation and assests to implement your Certificate.

#### Resources

* [https://docs.aws.amazon.com/elasticloadbalancing/latest/application/listener-authenticate-users.html](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/listener-authenticate-users.html)
* [https://aws.amazon.com/blogs/aws/built-in-authentication-in-alb/](https://aws.amazon.com/blogs/aws/built-in-authentication-in-alb/)
* [https://docs.aws.amazon.com/acm/latest/userguide/import-certificate-api-cli.html](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate-api-cli.html)

For Cloud Platform: [https://docs.aws.amazon.com/elasticloadbalancing/latest/application/listener-authenticate-users.html](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/listener-authenticate-users.html)

### Option 2 - Self Generated

The Digital Service will be required to export a public key that can be uploaded to the App Registration blade within Entra. Any requests coming from their application will use the private key to hash the JWT payload allowing Entra to use the uploaded public key to assert that the communication is legitimate.

In this scenario we would expect the Digital Service to have the appropriate Governance and Policy checks in place to ensure the Certificate is correctly signed and securely stored.

## OIDC Client Secrets

One of the most common ways of authenticating digital services via OIDC is the use of Client Secrets. Developers can add a unique secret to their code that when making an authentication request, can verify that the request is coming from a trusted source.

Entra ID App Registrations provide the ability to generate and auto rotate client secrets. Implementation of OIDC in Entra follows the OIDC standards and can be integrated with any common third-party libraries or code.

Once you have completed your onboarding process we will securely send you the OIDC Authentication details to be stored in your Cloud providers secrets store for use in your application.

##### SAML

SAML can be used for applications that do not communicate with OIDC protocols. It is generally more complex to setup and will require further conversation with the EUC Identity team to setup with you.

SAML is a great option for those with on-premises and legacy applications that do not support OIDC or require a single authentication point to serve multiple Applications to use SSO.
A member of the EUC Identity team will organise a meeting to go through the requirements and architecture to ensure a smooth process of onboarding. The configuration and any updates to the configuration will be done through the EUC Identity team.

##### Secrets Rotation and Certificate Renewal

To request a new secret or certificate renewal you can email our shared IDAM Team inbox at [idamteam@justice.gov.uk](mailto:idamteam@justice.gov.uk). This allows us to monitor our SLAs to ensure we are providing a good service.

# Resources

* [New ServiceNow SSO Request Link](TODO)
* [EUCS IDAM Team Shared Inbox](mailto:idamteam@justice.gov.uk)
